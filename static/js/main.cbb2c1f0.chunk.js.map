{"version":3,"sources":["../../dbdb/index.js","app/Providers.js","shared/useDb.js","shared/index.js","app/DayPicker.js","app/TodoForm.js","app/TodoListItem.js","app/DayBrowser.js","shared/useDayBrowser.js","app/TodoList.js","shared/useTodoHistory.js","App.js","serviceWorker.js","index.js"],"names":["Dropbox","__webpack_require__","TOKEN_KEY","createJsonFile","content","fileName","arguments","length","undefined","File","JSON","stringify","type","lastModified","Date","getTime","dbdb","_ref2","client","_ref2$databaseFileNam","databaseFileName","_ref2$databaseDirecto","databaseDirectoryPath","_ref2$authRedirect","authRedirect","window","location","origin","clientId","_ref2$fetchMethod","fetchMethod","fetch_npm_browserify_default","a","_ref2$tokenKey","tokenKey","databaseFileNameWithExtension","concat","databaseFilePath","getClient","getAccessTokenFromUrl","str","ret","Object","create","trim","replace","split","forEach","param","parts","key","shift","val","join","decodeURIComponent","Array","isArray","push","parseQueryString","hash","access_token","authUrl","fetch","getAuthenticationUrl","createClient","sessionToken","sessionStorage","getItem","accessToken","setItem","logOutDropbox","removeItem","readDatabase","Promise","resolve","error","filesSearch","path","query","then","_ref4","matches","databaseFile","slicedToArray","filesDownload","metadata","path_display","r","fileReader","FileReader","onload","parse","this","result","readAsText","fileBlob","console","warn","saveDatabase","_ref3","data","databaseName","_ref","file","filesUpload","contents","mode","uploadFile","Store","createContext","reducer","oldState","newState","objectSpread","db","dbdbdb","DropboxProvider","children","react_default","createElement","Providers_Dropbox","Provider","value","StoreProvider","currentDay","_useState","useState","_useState2","database","setDatabase","useContext","_useState3","_useState4","databaseFetched","setDatabaseFetched","_useReducer","useReducer","moment","_useReducer2","state","setState","useEffect","store","AppProviders","restProps","objectWithoutProperties","useDb","user","setUser","setClient","usersGetCurrentAccount","history","pushState","document","title","logout","DEFAULT_TODOS","DB_TODOS_KEY","DB_TODOS_HISTORY_KEY","everyDay","dayNamesEnglish","DAYS","freeze","reduce","acc","d","index","defineProperty","getDay","day","ALL_DAYS_SELECTED","map","getTodoHistory","asyncToGenerator","regenerator_default","mark","_callee","_useDb","remoteDatabase","localDatabase","wrap","_context","prev","next","sent","localForage","abrupt","t0","stop","apply","formatDate","date","parsedDate","year","month","useGlobalState","getTodos","_callee2","_useDb2","_context2","todos","useFilters","filters","currentFilters","setFilters","isFilterActive","name","includes","toggleFilter","filter","f","removeFilter","toConsumableArray","addFilter","keys","getTodoFilters","today","days","generateTodayFilter","messages","allDaysLabel","DayPicker","defaultSelectedDays","onSetSelectedDays","selectedDays","setSelectedDays","isDaySelected","allDaysChecked","every","syncDays","nextDays","toggleCheckDay","target","checked","onChange","editLabel","saveLabel","todoTextPlaceholder","TodoForm","cancel","todo","save","_ref$defaultValue","defaultValue","setValue","onSubmit","e","preventDefault","text","autoFocus","className","placeholder","onClick","deleteLabel","generateAriaLabelForDeleteButton","generateAriaLabelForTodo","generateAriaLabelForEditTodoButton","TodoListItem","isCompleted","toggleTodo","removeTodo","updateTodo","isEditing","setIsEditing","setNotEditing","update","style","textDecoration","aria-label","DayBrowser","_useDayBrowser","_useGlobalState","setDay","goToNextDay","add","goToPreviousDay","subtract","goToToday","useDayBrowser","format","TodoList","_ref$defaultTodos","defaultTodos","defaultHistory","defaultDay","_useTodoList","setTodos","getFilters","get","_useFilters","filterProps","activeFilters","k","filteredTodos","t","allTodos","newTodo","newTodos","id","todoId","addTodo","generateId","i","makeUniqueIdGenerator","useTodoList","_useTodoHistory","lastHistory","setHistory","isEqual","isEmpty","getDayHistory","isCompletedForDay","toggleTodoForDay","existingDayHistory","nextTodoHistory","nextHistory","useTodoHistory","isTodoCompleted","background","padding","float","todosResource","createResource","todosHistoryResource","Fallback","LiveTodoList","read","User","display_name","href","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","catch","ReactDOM","render","props","App_User","react","fallback","App_Fallback","App_LiveTodoList","getElementById","publicUrl","URL","process","addEventListener","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.cbb2c1f0.chunk.js","sourcesContent":["import _slicedToArray from \"/Users/jmhudak/_lab/ticbox/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport fetch from 'isomorphic-fetch';\n\nfunction parseQueryString(str) {\n  var ret = Object.create(null);\n\n  if (typeof str !== \"string\") {\n    return ret;\n  }\n\n  str = str.trim().replace(/^(\\?|#|&)/, \"\");\n\n  if (!str) {\n    return ret;\n  }\n\n  str.split(\"&\").forEach(function (param) {\n    var parts = param.replace(/\\+/g, \" \").split(\"=\"); // Firefox (pre 40) decodes `%3D` to `=`\n    // https://github.com/sindresorhus/query-string/pull/37\n\n    var key = parts.shift();\n    var val = parts.length > 0 ? parts.join(\"=\") : undefined;\n    key = decodeURIComponent(key); // missing `=` should be `null`:\n    // http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\n    val = val === undefined ? null : decodeURIComponent(val);\n\n    if (ret[key] === undefined) {\n      ret[key] = val;\n    } else if (Array.isArray(ret[key])) {\n      ret[key].push(val);\n    } else {\n      ret[key] = [ret[key], val];\n    }\n  });\n  return ret;\n}\n\nvar Dropbox = require(\"dropbox\").Dropbox;\n\nvar TOKEN_KEY = \"dbdbtoken\";\n\nfunction createJsonFile(content) {\n  var fileName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"dbdb.json\";\n  return new File([JSON.stringify(content, null, 2)], fileName, {\n    type: \"text/json\",\n    lastModified: new Date().getTime()\n  });\n}\n\nfunction uploadFile(_ref) {\n  var client = _ref.client,\n      path = _ref.path,\n      file = _ref.file;\n  return client && client.filesUpload({\n    path: path,\n    contents: file,\n    mode: \"overwrite\"\n  });\n}\n\nfunction index(_ref2) {\n  var _ref2$databaseFileNam = _ref2.databaseFileName,\n      databaseFileName = _ref2$databaseFileNam === void 0 ? \"dbdb\" : _ref2$databaseFileNam,\n      _ref2$databaseDirecto = _ref2.databaseDirectoryPath,\n      databaseDirectoryPath = _ref2$databaseDirecto === void 0 ? \"/\" : _ref2$databaseDirecto,\n      _ref2$authRedirect = _ref2.authRedirect,\n      authRedirect = _ref2$authRedirect === void 0 ? window.location.origin : _ref2$authRedirect,\n      clientId = _ref2.clientId,\n      _ref2$fetchMethod = _ref2.fetchMethod,\n      fetchMethod = _ref2$fetchMethod === void 0 ? fetch : _ref2$fetchMethod,\n      _ref2$tokenKey = _ref2.tokenKey,\n      tokenKey = _ref2$tokenKey === void 0 ? TOKEN_KEY : _ref2$tokenKey;\n  var client;\n  var databaseFileNameWithExtension = \"\".concat(databaseFileName, \".json\");\n  var databaseFilePath = \"\".concat(databaseDirectoryPath).concat(databaseFileNameWithExtension);\n\n  function getClient() {\n    return client;\n  }\n\n  function getAccessTokenFromUrl() {\n    return parseQueryString(window.location.hash).access_token;\n  }\n\n  function createClient() {\n    var sessionToken = sessionStorage.getItem(tokenKey);\n    var accessToken = sessionToken || getAccessTokenFromUrl();\n\n    if (!sessionToken && accessToken) {\n      sessionStorage.setItem(tokenKey, accessToken);\n    }\n\n    if (accessToken) {\n      client = new Dropbox({\n        accessToken: accessToken,\n        fetch: fetchMethod\n      });\n      return getClient();\n    }\n  }\n\n  function getAuthUrl() {\n    var dbx = new Dropbox({\n      clientId: clientId,\n      fetch: fetch\n    });\n    return dbx.getAuthenticationUrl(authRedirect);\n  }\n\n  function logOutDropbox() {\n    client = undefined;\n    window.sessionStorage.removeItem(tokenKey);\n  }\n\n  function saveDatabase(_ref3) {\n    var data = _ref3.data,\n        databaseName = _ref3.databaseName;\n    uploadFile({\n      client: client,\n      file: createJsonFile(data, databaseName),\n      path: databaseFilePath\n    });\n  }\n\n  function readDatabase() {\n    return new Promise(function (resolve, error) {\n      if (!client) {\n        resolve();\n      }\n\n      client.filesSearch({\n        path: \"\",\n        query: databaseFileNameWithExtension\n      }).then(function (_ref4) {\n        var matches = _ref4.matches;\n\n        if (matches && matches.length) {\n          var _matches = _slicedToArray(matches, 1),\n              databaseFile = _matches[0];\n\n          client.filesDownload({\n            path: databaseFile.metadata.path_display\n          }).then(function (r) {\n            var fileReader = new FileReader();\n\n            fileReader.onload = function () {\n              resolve(JSON.parse(this.result));\n            };\n\n            fileReader.readAsText(r.fileBlob);\n          });\n        } else {\n          console.warn(\"no db found\");\n          resolve();\n        }\n      });\n    });\n  }\n\n  return {\n    authUrl: getAuthUrl(),\n    createClient: createClient,\n    getClient: getClient,\n    logOutDropbox: logOutDropbox,\n    readDatabase: readDatabase,\n    saveDatabase: saveDatabase\n  };\n}\n\nexport default index;","import React, {\n  createContext,\n  useReducer,\n  useState,\n  useEffect,\n  useContext,\n} from 'react';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport dbdbdb from 'dbdbdb';\n\nexport const Store = createContext();\nconst reducer = (oldState, newState) => ({ ...oldState, ...newState });\n\nexport const Dropbox = createContext();\nconst db = dbdbdb({ clientId: 'uaqu46389soi02n' });\n\nfunction DropboxProvider({ children }) {\n  return <Dropbox.Provider value={db}>{children}</Dropbox.Provider>;\n}\n\nfunction StoreProvider({ children, currentDay }) {\n  const [database, setDatabase] = useState({});\n  const { readDatabase } = useContext(Dropbox);\n  const [databaseFetched, setDatabaseFetched] = useState(false);\n  const [state, setState] = useReducer(reducer, {\n    currentDay: currentDay || moment(),\n  });\n\n  useEffect(() => {\n    if (!databaseFetched) {\n      readDatabase().then(db => {\n        setDatabase(db);\n        setDatabaseFetched(true);\n      });\n    }\n  });\n\n  const store = { state, setState, database };\n  return <Store.Provider value={store}>{children}</Store.Provider>;\n}\n\nexport default function AppProviders({ children, ...restProps }) {\n  return (\n    <DropboxProvider>\n      <StoreProvider {...restProps}>{children}</StoreProvider>\n    </DropboxProvider>\n  );\n}\n\nAppProviders.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import { useContext, useEffect, useState } from 'react';\nimport { Dropbox } from 'app/Providers';\n\nexport function useDb() {\n  const db = useContext(Dropbox);\n  const { getClient, createClient, logOutDropbox } = db;\n  const [user, setUser] = useState(null);\n  const [client, setClient] = useState(getClient() || createClient());\n\n  useEffect(\n    () => {\n      client && client.usersGetCurrentAccount().then(setUser);\n      window.history.pushState({}, document.title, '/');\n    },\n    [client]\n  );\n\n  function logout() {\n    setUser(null);\n    setClient(null);\n    logOutDropbox();\n  }\n\n  return {\n    ...db,\n    client,\n    logout,\n    user,\n  };\n}\n","import { useEffect, useState, useContext } from 'react';\nimport localForage from 'localforage';\nimport { Store } from 'app/Providers';\nimport { useDb } from './useDb';\nimport moment from 'moment';\n\n// Store\nexport const DEFAULT_TODOS = [];\nexport const DB_TODOS_KEY = 'todos';\nexport const DB_TODOS_HISTORY_KEY = 'history';\n\n// Day Picker\nexport const everyDay = 'everyDay';\nexport const Monday = 'Monday';\nexport const Tuesday = 'Tuesday';\nexport const Wednesday = 'Wednesday';\nexport const Thursday = 'Thursday';\nexport const Friday = 'Friday';\nexport const Saturday = 'Saturday';\nexport const Sunday = 'Sunday';\nexport const dayNamesEnglish = [\n  Sunday,\n  Monday,\n  Tuesday,\n  Wednesday,\n  Thursday,\n  Friday,\n  Saturday,\n];\nexport const DAYS = Object.freeze(\n  dayNamesEnglish.reduce((acc, d, index) => ({ ...acc, [d]: index }), {})\n);\nexport const getDay = day => DAYS[day];\nexport const ALL_DAYS_SELECTED = dayNamesEnglish.map(getDay);\n\n// Utils\nexport function makeUniqueIdGenerator(id = '', initialIndex = 0) {\n  let i = initialIndex;\n  return function() {\n    i += 1;\n    return `${id}_${i}`;\n  };\n}\n\nexport const getTodoHistory = async () => {\n  const { readDatabase } = useDb();\n  try {\n    const database = await readDatabase();\n    const remoteDatabase = database && database.history;\n    const localDatabase = await localForage.getItem(DB_TODOS_HISTORY_KEY);\n    const store = remoteDatabase || localDatabase;\n    if (!store) {\n      await localForage.setItem(DB_TODOS_HISTORY_KEY, {});\n      return {};\n    }\n    return store;\n  } catch (e) {}\n};\n\nexport function formatDate(date) {\n  const parsedDate = moment(date);\n  const year = parsedDate.year();\n  const month = parsedDate.month();\n  const day = parsedDate.date();\n  return `${month}-${day}-${year}`;\n}\n\nexport function useGlobalState() {\n  return useContext(Store);\n}\n\nexport const getTodos = async () => {\n  const { readDatabase } = useDb();\n  try {\n    const database = await readDatabase();\n    const remoteDatabase = database && database.todos;\n    const localDatabase = await localForage.getItem(DB_TODOS_KEY);\n    const store = remoteDatabase || localDatabase;\n    if (!store) {\n      await localForage.setItem(DB_TODOS_KEY, DEFAULT_TODOS);\n    }\n    return store || DEFAULT_TODOS;\n  } catch (e) {}\n};\n\nexport function useFilters(filters = {}) {\n  const [currentFilters, setFilters] = useState(filters);\n\n  const addFilter = name => setFilters([...currentFilters, name]);\n  const removeFilter = name =>\n    setFilters(currentFilters.filter(f => f !== name));\n  const isFilterActive = name => currentFilters.includes(name);\n  const toggleFilter = name =>\n    isFilterActive(name) ? removeFilter(name) : addFilter(name);\n\n  return {\n    filters,\n    currentFilters,\n    isFilterActive,\n    toggleFilter,\n    setFilters: filters => setFilters(Object.keys(filters)),\n  };\n}\n\nexport const generateTodayFilter = (today = moment().day()) => ({ days }) => {\n  return days.includes(today);\n};\n\nconst Day = 'Day';\n\n// export const filterMoreRecentTodos = ({ createdAt }) =>\nexport const requiredFilters = day => [];\nexport const getTodoFilters = ({ day } = {}) => {\n  return {\n    [Day]: generateTodayFilter(day),\n  };\n};\n\nexport function useTodoList(defaultTodos = [], day = moment()) {\n  const [todos, setTodos] = useState(defaultTodos);\n  const getFilters = () => getTodoFilters({ day: day.get('day') });\n  const { currentFilters, setFilters, ...filterProps } = useFilters(\n    Object.keys(getFilters())\n  );\n\n  const activeFilters = [...currentFilters.map(k => getFilters()[k])];\n  const filteredTodos = todos.filter(t => activeFilters.every(f => f(t)));\n\n  useEffect(\n    () => {\n      localForage.setItem(DB_TODOS_KEY, todos);\n    },\n    [todos]\n  );\n\n  const addTodo = todo => {\n    const generateId = makeUniqueIdGenerator('todo', todos.length);\n    const newTodos = [...todos, { id: generateId(), ...todo }];\n    setTodos(newTodos);\n  };\n\n  const toggleTodo = index => {\n    const newTodos = [...todos];\n    newTodos[index].isCompleted = !newTodos[index].isCompleted;\n    setTodos(newTodos);\n  };\n\n  const removeTodo = todoId => {\n    setTodos(todos.filter(id => id !== todoId));\n  };\n\n  const updateTodo = newTodo => {\n    const newTodos = todos.map(todo => {\n      if (newTodo.id !== todo.id) return todo;\n      return { ...todo, ...newTodo };\n    });\n    setTodos(newTodos);\n  };\n\n  return {\n    todos: filteredTodos,\n    allTodos: todos,\n    updateTodo,\n    removeTodo,\n    toggleTodo,\n    addTodo,\n    ...filterProps,\n  };\n}\n\nexport { useDayBrowser } from './useDayBrowser';\nexport { useTodoHistory } from './useTodoHistory';\nexport { useDb } from './useDb';\n","import React, { useState } from 'react';\nimport {\n  DAYS,\n  ALL_DAYS_SELECTED,\n  getDay,\n  dayNamesEnglish,\n  everyDay,\n} from 'shared';\n\nexport const messages = {\n  allDaysLabel: 'All days of the week',\n};\n\nexport default function DayPicker({ defaultSelectedDays, onSetSelectedDays }) {\n  const [selectedDays, setSelectedDays] = useState(defaultSelectedDays);\n  const isDaySelected = day => selectedDays.includes(getDay(day));\n  const allDaysChecked = ALL_DAYS_SELECTED.every(day =>\n    selectedDays.includes(day)\n  );\n  function syncDays(nextDays) {\n    setSelectedDays(nextDays);\n    onSetSelectedDays(nextDays);\n  }\n  function toggleCheckDay({ target }) {\n    const day = DAYS[target.value];\n    let nextDays;\n    if (!isDaySelected(target.value)) {\n      nextDays = [...selectedDays, day];\n    } else {\n      nextDays = selectedDays.filter(d => d !== day);\n    }\n    syncDays(nextDays);\n  }\n  return (\n    <fieldset>\n      <legend>Day</legend>\n      <label>\n        <input\n          type=\"checkbox\"\n          value={everyDay}\n          checked={allDaysChecked}\n          onChange={() => syncDays(allDaysChecked ? [] : ALL_DAYS_SELECTED)}\n        />\n        {messages.allDaysLabel}\n      </label>\n      &nbsp;—&nbsp;\n      {dayNamesEnglish.map(day => (\n        <label key={day}>\n          <input\n            type=\"checkbox\"\n            value={day}\n            checked={isDaySelected(day)}\n            onChange={toggleCheckDay}\n          />\n          {day}\n        </label>\n      ))}\n    </fieldset>\n  );\n}\n","import React, { useState } from 'react';\nimport { ALL_DAYS_SELECTED } from 'shared';\nimport DayPicker from 'app/DayPicker';\nexport const TODO_PLACEHOLDER = 'Climb Mt Rainier';\n\nexport const messages = {\n  editLabel: 'Edit',\n  saveLabel: 'Save',\n  todoTextPlaceholder: 'Climb Mt Rainier',\n};\n\nexport default function TodoForm({ cancel, todo, save, defaultValue = '' }) {\n  const [value, setValue] = useState(defaultValue);\n  const [selectedDays, setSelectedDays] = useState(\n    todo ? todo.days : ALL_DAYS_SELECTED\n  );\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!value) return;\n    save({\n      text: value,\n      days: selectedDays,\n    });\n    setValue('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        Todo&nbsp;\n        <input\n          autoFocus\n          type=\"text\"\n          className=\"input\"\n          placeholder={messages.todoTextPlaceholder}\n          value={value}\n          onChange={e => setValue(e.target.value)}\n        />\n      </label>\n      {!!value && (\n        <DayPicker\n          defaultSelectedDays={selectedDays}\n          onSetSelectedDays={setSelectedDays}\n        />\n      )}\n      <button type=\"submit\">{messages.saveLabel}</button>\n      {!!defaultValue && <button onClick={cancel}>Cancel</button>}\n    </form>\n  );\n}\n","import React, { useState } from 'react';\nimport TodoForm from 'app/TodoForm';\n\nexport const messages = {\n  editLabel: 'Edit',\n  deleteLabel: 'Remove',\n};\n\nexport const generateAriaLabelForDeleteButton = ({ text }) =>\n  `${messages.deleteLabel} ${text}`;\n\nexport const todoAriaLabelPart1 = 'Mark';\nexport const todoAriaLabelPart2 = 'as completed';\nexport const generateAriaLabelForTodo = ({ text }) =>\n  `${todoAriaLabelPart1} ${text} ${todoAriaLabelPart2}`;\nexport const generateAriaLabelForEditTodoButton = ({ text }) => `Edit ${text}`;\n\nexport default function TodoListItem({\n  isCompleted,\n  todo,\n  toggleTodo,\n  removeTodo,\n  updateTodo,\n}) {\n  const [isEditing, setIsEditing] = useState(false);\n  const setEditing = () => setIsEditing(true);\n  const setNotEditing = () => setIsEditing(false);\n  if (isEditing) {\n    return (\n      <TodoForm\n        todo={todo}\n        save={update => {\n          updateTodo({\n            ...todo,\n            ...update,\n          });\n          setNotEditing();\n        }}\n        defaultValue={todo.text}\n        cancel={setNotEditing}\n      />\n    );\n  }\n  return (\n    <div\n      style={{\n        textDecoration: isCompleted ? 'line-through' : '',\n      }}\n    >\n      <input\n        aria-label={generateAriaLabelForTodo(todo)}\n        type=\"checkbox\"\n        checked={isCompleted}\n        onChange={toggleTodo}\n      />\n      {todo.text}\n\n      <div>\n        <button\n          aria-label={generateAriaLabelForEditTodoButton(todo)}\n          onClick={setEditing}\n        >\n          {messages.editLabel}\n        </button>\n        <button\n          aria-label={generateAriaLabelForDeleteButton(todo)}\n          onClick={() => removeTodo(todo)}\n        >\n          {messages.deleteLabel}\n        </button>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { useGlobalState, useDayBrowser } from 'shared';\n\nexport default function DayBrowser() {\n  const { state } = useGlobalState();\n  const { currentDay } = state;\n  const { goToNextDay, goToPreviousDay, goToToday } = useDayBrowser();\n  return (\n    <div>\n      <button onClick={goToPreviousDay}>Prev</button>\n      <button onClick={goToToday}>Today</button>\n      {currentDay.format('dddd, MMMM Do YYYY')}\n      <button onClick={goToNextDay}>Next</button>\n    </div>\n  );\n}\n","import moment from 'moment';\nimport { useGlobalState } from 'shared';\n\nexport function useDayBrowser(defaultDay = moment()) {\n  const { state, setState } = useGlobalState();\n  const { currentDay } = state;\n  const setDay = day => setState({ currentDay: day });\n  const goToNextDay = () => setDay(currentDay.add(1, 'day'));\n  const goToPreviousDay = () => setDay(currentDay.subtract(1, 'day'));\n  const goToToday = () => setDay(moment());\n  return {\n    goToNextDay,\n    goToPreviousDay,\n    goToToday,\n  };\n}\n","import React, { useEffect } from 'react';\nimport TodoForm from 'app/TodoForm';\nimport TodoListItem from 'app/TodoListItem';\nimport { useTodoList, useTodoHistory, useDb } from 'shared';\nimport DayBrowser from 'app/DayBrowser';\nimport { useGlobalState } from 'shared';\n\nexport default function TodoList({\n  defaultTodos = [],\n  defaultHistory,\n  defaultDay,\n}) {\n  const { saveDatabase } = useDb();\n  const { state } = useGlobalState();\n  const { currentDay } = state;\n  const {\n    allTodos,\n    todos,\n    filters,\n    toggleFilter,\n    isFilterActive,\n    addTodo,\n    removeTodo,\n    updateTodo,\n  } = useTodoList(defaultTodos, currentDay);\n  const { history, toggleTodoForDay, isCompletedForDay } = useTodoHistory(\n    defaultHistory\n  );\n  const isTodoCompleted = ({ id }) => isCompletedForDay(id, currentDay);\n\n  useEffect(\n    () => {\n      saveDatabase({\n        data: {\n          history,\n          todos: allTodos,\n        },\n      });\n    },\n    [history, allTodos]\n  );\n\n  return (\n    <div>\n      <DayBrowser />\n      <div>\n        Filters\n        {filters.map(name => (\n          <label key={name}>\n            {name}\n            <input\n              type=\"checkbox\"\n              checked={isFilterActive(name)}\n              onChange={() => toggleFilter(name)}\n            />\n          </label>\n        ))}\n        <ul>\n          {todos.map((todo, index) => (\n            <li key={index}>\n              <TodoListItem\n                index={index}\n                todo={todo}\n                isCompleted={isTodoCompleted(todo)}\n                toggleTodo={() => toggleTodoForDay(todo.id, currentDay)}\n                removeTodo={removeTodo}\n                updateTodo={updateTodo}\n              />\n            </li>\n          ))}\n          <li>\n            <TodoForm save={addTodo} />\n          </li>\n        </ul>\n        <div style={{ background: 'lavender', padding: 20, float: 'right' }}>\n          <pre>todos: {JSON.stringify(allTodos, null, 2)}</pre>\n          <pre>history: {JSON.stringify(history, null, 2)}</pre>\n          <pre>state: {JSON.stringify(state, null, 2)}</pre>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport isEqual from 'lodash/isEqual';\nimport isEmpty from 'lodash/isEmpty';\nimport localForage from 'localforage';\nimport { DB_TODOS_HISTORY_KEY, formatDate } from 'shared';\n\nexport function useTodoHistory(defaultHistory = {}) {\n  let lastHistory = defaultHistory;\n  const [history, setHistory] = useState(defaultHistory);\n\n  useEffect(() => {\n    if (!isEqual(lastHistory, history) && !isEmpty(history)) {\n      localForage.setItem(DB_TODOS_HISTORY_KEY, history);\n    }\n  });\n\n  const getDayHistory = date => history[date] || [];\n  const isCompletedForDay = (todoId, day) =>\n    getDayHistory(formatDate(day)).includes(todoId);\n\n  const toggleTodoForDay = (todoId, day) => {\n    const date = formatDate(day);\n    if (!date) return;\n    const existingDayHistory = getDayHistory(date);\n    const isCompletedForDay = existingDayHistory.includes(todoId);\n    const nextTodoHistory = isCompletedForDay\n      ? existingDayHistory.filter(t => t !== todoId)\n      : [...existingDayHistory, todoId];\n    const nextHistory = {\n      ...history,\n      [date]: nextTodoHistory,\n    };\n    lastHistory = nextHistory;\n    setHistory(nextHistory);\n  };\n\n  return {\n    history,\n    isCompletedForDay,\n    toggleTodoForDay,\n  };\n}\n","import React, { Suspense } from 'react';\nimport { getTodos, getTodoHistory, useDb } from 'shared';\nimport AppProviders from 'app/Providers';\nimport { unstable_createResource as createResource } from 'react-cache';\nimport TodoList from 'app/TodoList';\n\nconst todosResource = createResource(getTodos);\nconst todosHistoryResource = createResource(getTodoHistory);\n\nconst Fallback = () => <div>Loading...</div>;\n\nconst LiveTodoList = () => {\n  const todos = todosResource.read();\n  const history = todosHistoryResource.read();\n  return <TodoList defaultTodos={todos} defaultHistory={history} />;\n};\n\nconst User = () => {\n  const { authUrl, client, logout, user } = useDb();\n\n  if (user) {\n    const { name } = user;\n    return (\n      <div>\n        Logged in as: {name.display_name}&nbsp;\n        <button onClick={logout}>Logout</button>\n      </div>\n    );\n  }\n\n  return client ? (\n    'Fetching account...'\n  ) : (\n    <a href={authUrl}>Login to Dropbox</a>\n  );\n};\n\nexport default function App(props) {\n  return (\n    <AppProviders>\n      <User />\n      <Suspense fallback={<Fallback />}>\n        <LiveTodoList />\n      </Suspense>\n    </AppProviders>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      console.log(\n        'bailing on registering service worker!!!!!',\n        publicUrl,\n        publicUrl.origin\n      );\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.register();\n"],"sourceRoot":""}